const axios = require('axios');

const API_BASE = 'http://localhost:3000';

async function testNotifications() {
  try {
    console.log('üß™ Testando sistema de notifica√ß√µes...\n');

    // 1. Fazer login para obter token
    console.log('1. Fazendo login...');
    const loginResponse = await axios.post(`${API_BASE}/auth/login`, {
      email: 'alice@example.com',
      password: '123456'
    });
    
    const token = loginResponse.data.access_token;
    console.log('‚úÖ Login realizado com sucesso\n');

    // 2. Verificar notifica√ß√µes do usu√°rio
    console.log('2. Verificando notifica√ß√µes...');
    const notificationsResponse = await axios.get(`${API_BASE}/notifications`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    console.log(`üìß Notifica√ß√µes encontradas: ${notificationsResponse.data.length}`);
    notificationsResponse.data.forEach((notification, index) => {
      console.log(`   ${index + 1}. ${notification.title}: ${notification.message}`);
    });
    console.log('');

    // 3. Verificar contagem de n√£o lidas
    console.log('3. Verificando contagem de n√£o lidas...');
    const unreadResponse = await axios.get(`${API_BASE}/notifications/unread-count`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    console.log(`üìä Notifica√ß√µes n√£o lidas: ${unreadResponse.data.count}\n`);

    // 4. Marcar uma notifica√ß√£o como lida (se existir)
    if (notificationsResponse.data.length > 0) {
      console.log('4. Marcando primeira notifica√ß√£o como lida...');
      await axios.post(`${API_BASE}/notifications/mark-as-read/${notificationsResponse.data[0].id}`, {}, {
        headers: { Authorization: `Bearer ${token}` }
      });
      console.log('‚úÖ Notifica√ß√£o marcada como lida\n');
    }

    // 5. Testar cria√ß√£o de nova notifica√ß√£o
    console.log('5. Criando nova notifica√ß√£o de teste...');
    const testNotificationResponse = await axios.post(`${API_BASE}/notifications/test`, {}, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    console.log('‚úÖ Nova notifica√ß√£o criada com sucesso\n');

    // 6. Verificar notifica√ß√µes novamente
    console.log('6. Verificando notifica√ß√µes ap√≥s cria√ß√£o...');
    const updatedNotificationsResponse = await axios.get(`${API_BASE}/notifications`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    console.log(`üìß Total de notifica√ß√µes: ${updatedNotificationsResponse.data.length}`);
    console.log('‚úÖ Teste conclu√≠do com sucesso!');

  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error.response?.data || error.message);
  }
}

testNotifications(); 